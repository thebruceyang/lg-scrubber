[tool.poetry]
name = "scrubber"
version = "0.1.0"
description = ""
authors = ["Markus Ecker <markus.ecker@gmail.com>"]
readme = "README.md"

packages = [
    { include = "agent", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
copilotkit = "0.1.46"
tavily-python = "^0.5.1"
uvicorn = "^0.34.0"
dotenv = "^0.9.9"
langchain = ">=0.1.0"
langchain-core = ">=0.1.5"
langchain-community = ">=0.0.1"
langchain-experimental = ">=0.0.11"
langchain-openai = ">=0.0.1"
langgraph = "^0.4.8"

[tool.poetry.group.dev.dependencies]
langgraph-cli = {extras = ["inmem"], version = "^0.2.10"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
langgraph_server = "agent.langgraph_server:main"

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "langgraph-cli[inmem]>=0.2.8",
    "mypy>=1.13.0",
    "pytest>=8.3.5",
    "ruff>=0.8.2",
]
